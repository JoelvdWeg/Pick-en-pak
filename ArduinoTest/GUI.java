/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ArduinoTest;

import arduino.*;

/**
 *
 * @author nickv
 */
public class GUI extends javax.swing.JFrame {

    static Arduino arduino1;
    static Arduino arduino2;
    protected boolean arduino1Active;
    protected boolean arduino2Active;
    
    private String testVar = "test";
    
    /**
     * Creates new form GUI
     */
    public GUI() {
        initComponents();
        
        setTitle("HMI");
        
        //refresh COM port list on start
        portList1.refreshMenu();
        portList2.refreshMenu();
        
        jbON1.setEnabled(false);
        jbOFF1.setEnabled(false);
        jbON2.setEnabled(false);
        jbOFF2.setEnabled(false);
        
    }
    
//    public void setValue1(String value) {
//        jlValue1.setText("lul");
//        System.out.println(value);
//    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jbRefresh1 = new javax.swing.JButton();
        jbConnect1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jbRefresh2 = new javax.swing.JButton();
        jbConnect2 = new javax.swing.JButton();
        jbON1 = new javax.swing.JButton();
        jbOFF1 = new javax.swing.JButton();
        jbON2 = new javax.swing.JButton();
        jbOFF2 = new javax.swing.JButton();
        portList1 = new arduino.PortDropdownMenu();
        portList2 = new arduino.PortDropdownMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Pick Arduino:");

        jbRefresh1.setText("Refresh");
        jbRefresh1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbRefresh1ActionPerformed(evt);
            }
        });

        jbConnect1.setText("Connect");
        jbConnect1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbConnect1ActionPerformed(evt);
            }
        });

        jLabel2.setText("Pack Arduino:");

        jbRefresh2.setText("Refresh");
        jbRefresh2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbRefresh2ActionPerformed(evt);
            }
        });

        jbConnect2.setText("Connect");
        jbConnect2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbConnect2ActionPerformed(evt);
            }
        });

        jbON1.setText("ON");
        jbON1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbON1ActionPerformed(evt);
            }
        });

        jbOFF1.setText("OFF");
        jbOFF1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbOFF1ActionPerformed(evt);
            }
        });

        jbON2.setText("ON");
        jbON2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbON2ActionPerformed(evt);
            }
        });

        jbOFF2.setText("OFF");
        jbOFF2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbOFF2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(portList1, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jbON1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jbRefresh1, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbConnect1, javax.swing.GroupLayout.DEFAULT_SIZE, 106, Short.MAX_VALUE))
                    .addComponent(jbOFF1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 77, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(portList2, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jbON2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jbRefresh2, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbConnect2, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jbOFF2, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jbRefresh1)
                    .addComponent(jLabel2)
                    .addComponent(jbRefresh2)
                    .addComponent(jbConnect2)
                    .addComponent(jbConnect1)
                    .addComponent(portList1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(portList2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbON1)
                    .addComponent(jbOFF1)
                    .addComponent(jbON2)
                    .addComponent(jbOFF2))
                .addContainerGap(331, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbRefresh1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbRefresh1ActionPerformed
        // TODO add your handling code here:
        portList1.refreshMenu();
    }//GEN-LAST:event_jbRefresh1ActionPerformed

    private void jbConnect1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbConnect1ActionPerformed
        // TODO add your handling code here:
        if (jbConnect1.getText().equals("Connect")) {
                    arduino1 = new Arduino(portList1.getSelectedItem().toString(), 9600);
                    if (arduino1.openConnection()) {
                        jbConnect1.setText("Disconnect");
                        portList1.setEnabled(false);
                        jbON1.setEnabled(true);
                        jbOFF1.setEnabled(true);
                        jbRefresh1.setEnabled(false);
                        
                        Thread t1 = new Thread(new ProgressBar());
                        t1.start();
                    }
                } else {
                    arduino1.closeConnection();
                    jbConnect1.setText("Connect");;
                    portList1.setEnabled(true);
                    jbON1.setEnabled(false);
                    jbRefresh1.setEnabled(true);
                    jbOFF1.setEnabled(false);   
                }
    }//GEN-LAST:event_jbConnect1ActionPerformed

    private void jbRefresh2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbRefresh2ActionPerformed
        // TODO add your handling code here:
        portList2.refreshMenu();
    }//GEN-LAST:event_jbRefresh2ActionPerformed

    private void jbConnect2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbConnect2ActionPerformed
        // TODO add your handling code here:
        if (jbConnect2.getText().equals("Connect")) {
                    arduino2 = new Arduino(portList2.getSelectedItem().toString(), 9600);
                    if (arduino2.openConnection()) {
                        jbConnect2.setText("Disconnect");
                        portList2.setEnabled(false);
                        jbON2.setEnabled(true);
                        jbOFF2.setEnabled(true);
                        jbRefresh2.setEnabled(false);
                    }
                } else {
                    arduino2.closeConnection();
                    jbConnect2.setText("Connect");
                    portList2.setEnabled(true);
                    jbON2.setEnabled(false);
                    jbRefresh2.setEnabled(true);
                    jbOFF2.setEnabled(false);
                }
    }//GEN-LAST:event_jbConnect2ActionPerformed

    private void jbON1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbON1ActionPerformed
        // TODO add your handling code here:
        arduino1.serialWrite('1');
    }//GEN-LAST:event_jbON1ActionPerformed

    private void jbOFF1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbOFF1ActionPerformed
        // TODO add your handling code here:
        arduino1.serialWrite('0');
    }//GEN-LAST:event_jbOFF1ActionPerformed

    private void jbOFF2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbOFF2ActionPerformed
        // TODO add your handling code here:
        arduino2.serialWrite('0');
    }//GEN-LAST:event_jbOFF2ActionPerformed

    private void jbON2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbON2ActionPerformed
        // TODO add your handling code here:
        arduino2.serialWrite('1');
    }//GEN-LAST:event_jbON2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUI().setVisible(true);
            }
        });
       
        
        
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    protected javax.swing.JButton jbConnect1;
    private javax.swing.JButton jbConnect2;
    private javax.swing.JButton jbOFF1;
    private javax.swing.JButton jbOFF2;
    private javax.swing.JButton jbON1;
    private javax.swing.JButton jbON2;
    private javax.swing.JButton jbRefresh1;
    private javax.swing.JButton jbRefresh2;
    private arduino.PortDropdownMenu portList1;
    private arduino.PortDropdownMenu portList2;
    // End of variables declaration//GEN-END:variables
}